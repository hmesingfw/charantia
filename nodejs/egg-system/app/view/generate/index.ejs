<template>
    <div>
        <el-form :inline="true" :model="QueryParam" class="header-query-form">
            <generate-form :datalist="queryComponentData" :model="QueryParam" @change="query(1)"></generate-form>

            <el-form-item>
                <el-button @click="query(1)" icon="el-icon-search" circle></el-button>
                <el-button @click="handleEdit({sort:1,status:'0'})" circle type="primary" icon="el-icon-plus">
                </el-button>
                <el-button @click="HandleDelete(apiUrl, multipleSelection, query);" icon="el-icon-delete" circle
                    type="danger" v-show="multipleSelection.length>0"></el-button>
            </el-form-item>
        </el-form>

        <div class="article-table">
            <el-table :data="tableData" :height="tableHeight" @selection-change="val => multipleSelection = val"
                v-loading="tableLoading" :stripe="true" header-row-class-name="table-header-color">
                <el-table-column type="selection" width="42"></el-table-column>
                <%_ tableList.forEach(function(item){ -%>
                <%_ if(item.component === 'el-select'){ -%>
 				<el-table-column label="<%=item.comment%>">
                    <template slot-scope="scope">{{ ListMatchField('<%= item.enumType %>', scope.row.<%=item.alias%>) }}</template>
                </el-table-column> 
                <%_ }else if(item.component === 'el-input-number'){ -%>
 				<el-table-column label="<%=item.comment%>">
 					<%_ if(item.isTableHanlde === true){ -%>
                    <template slot-scope="scope">
                        <el-input-number v-model="scope.row.<%=item.alias%>" controls-position="right" class="el-input-number-table" :min="1" :max="<%= item.defaultValue || 100000 %>"></el-input-number>
                    </template>
                    <%_ } else {  -%>
                    <template slot-scope="scope">{{ ListMatchField('<%= item.enumType %>', scope.row.<%=item.alias%>) }}</template>
            		<%_ } -%>		
                </el-table-column> 
                <%_ }else if(item.component === 'el-switch'){ -%>
 				<el-table-column label="<%=item.comment%>">
 					<%_ if(item.isTableHanlde === true){ -%>
                    <template slot-scope="scope">
                    	<el-switch class="switch-style" v-model="scope.row.<%=item.alias%>" @change="UpdateSwitch(scope.row, apiUrl, '<%=item.alias%>', query)" active-value="0" active-text="启用" inactive-value="1" inactive-text="禁用"></el-switch>    
                    </template>
                    <%_ } else {  -%>
                    <template slot-scope="scope">{{ ListMatchField('<%= item.enumType %>', scope.row.<%=item.alias%>) }}</template>
            		<%_ } -%>		
                </el-table-column> 
				<%_ }else{ -%>
				<el-table-column prop="<%=item.alias%>" label="<%=item.comment%>" width="140"></el-table-column>
            	<%_ } -%>				
                <%_ }) -%>
                <el-table-column label="操作" width="160" fixed="right">
                    <template slot-scope="scope">
                        <el-button size="mini" type="text" @click="handleEdit(scope.row, 'put')">编辑</el-button>
                        <el-button size="mini" type="text" @click="HandleDelete(apiUrl, scope.row, query)">删除
                        </el-button>
                    </template>
                </el-table-column>
            </el-table>

            <div class="pu-pagination">
                <el-pagination @size-change="val => {pagination.size = val; query()}"
                    @current-change="val => {pagination.page = val; query()}" :current-page="pagination.page"
                    :page-sizes="[10, 20, 30, 50]" :page-size="pagination.size"
                    layout="total, sizes, prev, pager, next, jumper" :total="totalCount"></el-pagination>
            </div>
        </div>

        <dialog-alert v-model="dialogValue" title="信息录入" :type="requestType" @submit="handleUpdate"
            :loading-button="loadingButton" @changeLoadingButton="loadingButton = false">
            <el-form label-position="right" label-width="100px" :rules="rules" :model="form" ref="ruleForm">
            	<%_ formList.forEach(function(item){ -%>
                <%_ if(item.component === 'el-select'){ -%>
                <el-form-item label="<%=item.comment%>" prop="<%=item.alias%>">
                    <el-select v-model="form.<%=item.alias%>" maxlength="<%=item.maxlength%>" :disabled="<%=item.isReadonly%>">
                    	<el-option v-for="item in <%=item.enumType%>" :key="item.id" :label="item.title" :value="item.value"></el-option>
                    </el-select>
                </el-form-item>
                <%_ }else if(item.component === 'el-input'){ -%>
                <el-form-item label="<%=item.comment%>" prop="<%=item.alias%>">
                    <el-input v-model="form.<%=item.alias%>" maxlength="<%=item.maxlength%>" :disabled="<%=item.isReadonly%>"></el-input>
                </el-form-item>
                <%_ }else if(item.component === 'el-radio'){ -%>
                <el-form-item label="<%=item.comment%>" prop="<%=item.alias%>">
                    <el-radio-group v-model="form.<%=item.alias%>" maxlength="<%=item.maxlength%>" :disabled="<%=item.isReadonly%>">
                    	<el-radio v-for="item in <%=item.enumType%>" :key="item.id" :label="item.value">{{item.title}}</el-radio>
                    </el-radio-group>
                </el-form-item>
                <%_ }else if(item.component === 'el-input-number'){ -%>
                <el-form-item label="<%=item.comment%>" prop="<%=item.alias%>">
                    <el-input-number v-model="form.<%=item.alias%>"></el-input-number>
                </el-form-item>
                 <%_ }else if(item.component === 'el-switch'){ -%>
                <el-form-item label="<%=item.comment%>" prop="<%=item.alias%>">
                	<el-switch class="switch-style" v-model="form.<%=item.alias%>" active-value="0" active-text="启用" inactive-value="1" inactive-text="禁用"></el-switch>             
                </el-form-item>
                <%_ }else if(item.component === 'el-date-picker'){ -%>
                <el-form-item label="<%=item.comment%>" prop="<%=item.alias%>">
                    <el-date-picker v-model="form.<%=item.alias%>" type="date" placeholder="选择日期"></el-date-picker>
                </el-form-item>
                <%_ } -%>				
                <%_ }) -%>
            </el-form>
        </dialog-alert>
    </div>
</template>
<script>
    import { GetHeight } from '@/utils/sys';
    import { mapState } from 'vuex';

    export default {
        computed: {
            ...mapState({
            	<%_ formEnum.forEach(function(item){ -%>
            	<%= item.enumType %>: state => state.enumList.data.<%= item.enumType -%>,
            	<%_ }) -%>	
            })
        },
        data() {
            return {
                apiUrl: this.$api.sys.tag, // 请求路很
                rules: {
                    title: [{
                        required: true,
                        message: '请输入内容',
                        trigger: 'blur'
                    }, ],
                },

                /* ------------ */
                tableHeight: GetHeight(240), // 列表高度       
                QueryParam: <%- JSON.stringify(queryHiddenList) %>, //  搜索条件
                queryComponentData: <%- JSON.stringify(queryList) %>,
                tableData: [],
                tableLoading: false,
                multipleSelection: [], // 多选选中的值

                pagination: {
                    page: 1,
                    size: localStorage.getItem('pageSize') || 10,
                },
                totalCount: 0, // 总共多少条
                /* 表单 */
                dialogValue: false,
                requestType: '', // 请求类型
                loadingButton: false,
                form: {},
            };
        },
        created() {
            this.query();
        },
        methods: {
            /* 查询操作 */
            query(flag) {
                if (flag == 1) this.pagination.page = 1; // 查询时，让页面等于1
                let param = {
                    ...this.pagination,
                    ...this.QueryParam
                };
                this.tableLoading = true;
                this.$http.get(this.apiUrl, {
                    params: param
                }).then(res => {
                    this.tableData = res.data.rows;
                    this.totalCount = res.data.count;
                    this.tableLoading = false;
                }).catch(() => {
                    this.tableLoading = false;
                });
            },
            /* 编辑 */
            handleEdit(row, requestType = 'post') {
                this.dialogValue = true;
                this.form = this.DeepCopy(row);
                this.requestType = requestType;
            },
            /* 保存 */
            async handleUpdate() {
                this.$refs.ruleForm.validate(async valid => {
                    if (valid) {
                        this.loadingButton = true;
                        let issucc = await this.ReqData(this.apiUrl, this.form, this.requestType);
                        if (issucc) {
                            this.loadingButton = false;
                            this.dialogValue = false;
                            this.query();
                        } else {
                            this.loadingButton = false;
                        }
                    }
                });
            },
        }
    };
</script>